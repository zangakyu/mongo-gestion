var express = require('express');
var Provider = require('./provider-mongodb').Provider;
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var app = express();

app.set('title', 'Application Title');
  app.set('views', __dirname + '/views');
  app.set('view engine', 'jade');
  app.use(bodyParser);
  
// error handlers

// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
  app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
      message: err.message,
      error: err
    });
  });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
  res.status(err.status || 500);
  res.render('error', {
    message: err.message,
    error: {}
  });
});

var provider = new Provider('localhost', 27017);

// Routes

app.get('/', function(req, res) {
			res.render('index.jade', { 
            locals: {
                title: 'Application de Gestion',
            }
        });
});

app.get('/collaborateurs', function(req, res){
    provider.findAll( function(error,cbs){
        res.render('collaborateurs.jade', { 
            locals: {
                title: 'Collaborateurs',
                listeCollaborateurs:cbs
            }
        });
    })
});

app.get('/collaborateurs/new', function(req, res) {
    res.render('collaborateurs_new.jade', { locals: {
        title: 'New Collaborateur'
    }
    });
});

app.post('/collaborateurs/new', function(req, res){
    provider.save({
        title: req.param('title'),
        body: req.param('body')
    }, function( error, docs) {
        res.redirect('/')
    });
});

app.get('/collaborateurs/:id', function(req, res) {
    articleProvider.findById(req.params.id, function(error, article) {
        res.render('blog_show.jade',
        { locals: {
            title: article.title,
            article:article
        }
        });
    });
});


app.listen(3000);
